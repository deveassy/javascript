3/3 강의노트

1. 배열 : 연관된 데이터(원소element)를 하나의 변수에 모아 통으로 관리하기 위해 사용하는 데이터 타입 / 순서가 중요
   - []을 사용하여 생성, 이 안의 데이터들은 색인(index)을 통해 원하는 데이터를 반환할 수 있다
   - 함수는 여러개의 값을 입력하더라도 단 하나의 값만 출력이 가능하지만 이를 극복할 수 있는 방법이  
     배열 --> 반복문과 함께 사용 시 유용하게 쓰임
   - length : 배열의 길이를 알 수 있음
   - push : 단수의 원소를 배열에 끝에 추가
   - concat : 복수의 원소를 배열에 끝에 추가
   - unshift : 배열의 시작점에 원소를 추가 
   - splice : a.splice(1,1,'x','y'); --> a배열에 있는 두번째 인덱스에서, 인덱스 자신(
     첫번째)을 삭제하고 그 자리에 x,y를 집어넣음
   - shift : 배열의 맨 앞의 원소를 제거
   - pop : 배열의 맨 뒤의 원소를 제거
   - sort : 배열의 정렬, 자동으로 정렬되어 기존의 배열 데이터가 정렬된다.
            -->sortfunc : 직접 정렬의 방법을 정의해서 사용 가능

2. 객체 : 배열과 유사, 그러나 인덱스에 숫자가 아닌 원하는 네이밍을 설정할 수 있다는 차이점이 있음
   - 배열에서 값에 해당하는 것이 key, 인덱스에 해당하는 것이 value
      --> 배열에서는 데이터들의 순서의 나열이 중요하지만 객체에서는 순서가 없음
   - for(key in 변수) : 선언된 변수에 담긴 데이터들을 각각 해석하여 key값을 담음
   - 객체 안에는 또다른 객체를 집어넣을 수 있음(함수 
   - this : 함수가 소속된 객체를 가르키는 

3. 모듈 : 코드를 여러개의 '파일'로 분리하여 코드의 재활용성을 높이고 유지보수를 쉽게 할 수 있는 기법들 / 코드 수정 시 필요한 로직을 빠르게 찾을 수 있으며 
   - Js가 구동되는 호스트환경에 따라서 모듈화 사용법이 다름.
   - 긴 함수를 별도의 파일로 분리하여서 기존 html파일의 용량을 줄이고 가독성을 높힘.

4. API / UI
   - 

5. 유효범위(scope)
   - 지역변수 : 함수 안쪽에서만 접근할 수 있는 변수
   - 전역변수 : 함수 바깥쪽에서도, 전 지역에서 접근이 가능한 변수