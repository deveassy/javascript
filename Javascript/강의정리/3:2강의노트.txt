3/2 js강의

1. 
2.
3. 수의 표현/연산
   - 정수를 사용해서 수식 표현, +,-,*,/ 사용 가능
   - 개발자 도구를 사용하여 입력 후 웹상으로 표시하는 방법 외에도, 웹 내의 개발자도구(console)
   - 창을 사용하여 코딩을 할 수 있다. (console.log를 꼭 사용하지 않아도 자체적으로 연산 가능)
   - Math는 숫자를 표현하는 것의 함축본(?)
   - pow는 제곱을 표현
   - round는 반올림된 정수
   - 가까운 위의정수 : ceil / 가까운 아래정수 : floor
   - random 1보다 작은 임의의 숫자
4. 문자
   - ''와 ""의 사용법은 같음 (문자를 구분해주는 사용)
   - escape : \(역슬래시)사용으로 '와 "를 문자로 해석하게 할 수 있음
     Ex) alert('eassy's coding everyday'); 를 입력하게 되면 프로그램은 'eassy'만
     문자로 해석하게 됨. 그러므로 everyday까지 해석하게 하기 위해 eassy\'s로 입력하여
     '를 문자열로 탈출하게 함
   - \n : 줄바꿈
5. 변수
   - var : 변수를 선언하기 위해 사용, 한번 선언되면 생략 가능
   - 코드의 재활용성을 높여줌 -> 코드수정 시 선언된 값만 수정하면 나머지 코드들에 자동적으로 수정된 내용이 적용됨
   -
6. 연산자
   - a = 1 (변수 대입연산자 값  === 1이라는 상수값을 a라는 변수에 대입시킨다)
   - == (동등연산자 equal operator) : 좌항, 우항을 비교하여 값이 같다면 true, 다르다면 false.
     실질적인 값이 같으면 true (ex: alert(1=="1")은 true) -> 아주 중대한 프로그램에서의 코드에서는
     {정확한 것이 중요하므로 실제로 코딩할 시에는 ==보다는 ===사용을 권장}
     * 이 때, =가 1개짜리인 것과 사용 주의사항 : =가 1개일때는 '대입연산자'로 좌항값을 우항의 변수에 대입할 때
       사용하는 것으로 전혀 의미가 다름
   - === (일치연산자 strict equal operator) : 좌항과 우항의 값이 같고, 데이터의 값도 같아야 true.
     (Ex: alert(1 === "1")은 false. 숫자1과 문자1은 같지 않기 때문)
   - null : 값이 없는(정의되지 않은(undefined)과는 의미가 다름)
   - ! : 부정. / != : 같지않다
   - &&(and연산자) : 좌항과 우항의 값이 같고 참이어야 실행됨
   - ||(or연산자) : 좌,우항중 하나의 값이라도 true일 경우 값이 true가 되는 연산자.

7. 데이터타입
   - Boolean : true / false
   - Undefined : Undefined
   - Null : Null

8. 조건문(conditional statement)
   - if (boolean ) {
	alert('result : true')
    } ->boolean값이 참일 경우엔 수식에 대해 결과값을 출력하고, 거짓일 경우엔 무시
   - else if : if의 결과가 false일 경우, else if의 조건문으로 넘어간다. true의 결과값이 
   - 
9. 반복문 (loop / iterate)
   - 기계적으로 그 자리에서 실행할 때 효용성이 있음
   - while / for
   - 제어 : break는 조건문에 따라서 반복이 멈추게 되고 | continue는 조건문에 따라 다시 반복문으로 돌아가서 
     실행하는 것

10. 함수 - 하나의 로직을 재실행 할 수 있도록 함. 코드의 '재사용성'을 높여줌
   - 호출할 때에는 ()를 붙혀주어야 함
   - 동일한 코드를 여러 방면으로 활용이 가능함 ->유지보수가 용이해짐(한 코드만 수정해주면 사용된 곳에서 수정이 실행)
   - return : 출력. return에 나오는 입력어만 출력되고 나머지는 무시됨.
   - 입력 : 함수 뒤 ()안에 변수가 입력되어있고, 호출되는 값이 있다면, 변수에 값을 넣어준 후 출력
     (ex: function get_argument(arg) {
		return arg;
	}
	alert(get_argument(1));
	alert(get_argument(2));
       입력하면 -------> 1 , 2 출력됨
      